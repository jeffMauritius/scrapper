// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Establishment {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  type          String
  name          String
  description   String
  startingPrice Float
  currency      String    @default("EUR")
  
  // Address
  city          String
  region        String
  country       String    @default("France")
  
  // Capacity
  minCapacity   Int?
  maxCapacity   Int
  
  // Rating
  rating        Float?
  reviewCount   Int       @default(0)
  
  // Relations
  images        Image[]
  features      Feature[] @relation(fields: [featureIds], references: [id])
  featureIds    String[]  @db.ObjectId
  amenities     Amenity[] @relation(fields: [amenityIds], references: [id])
  amenityIds    String[]  @db.ObjectId
}

model Image {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  url             String
  order           Int          @default(0)
  establishment   Establishment @relation(fields: [establishmentId], references: [id])
  establishmentId String       @db.ObjectId
}

model Feature {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  name            String          @unique
  establishments  Establishment[] @relation(fields: [establishmentIds], references: [id])
  establishmentIds String[]      @db.ObjectId
}

model Amenity {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  name            String          @unique
  establishments  Establishment[] @relation(fields: [establishmentIds], references: [id])
  establishmentIds String[]      @db.ObjectId
}